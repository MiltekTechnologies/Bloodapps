{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\Codeworld\\\\ionic-apps\\\\donortab\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"D:\\\\Codeworld\\\\ionic-apps\\\\donortab\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:\\\\Codeworld\\\\ionic-apps\\\\donortab\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import{Geolocation}from'@ionic-native/geolocation';import{IonButton,IonLoading,IonToast}from'@ionic/react';import React,{useState}from'react';var GeolocationButton=function GeolocationButton(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState({showError:false}),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),position=_useState6[0],setPosition=_useState6[1];var getLocation=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _position,latitudefetch,longitudefetch;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setLoading(true);_context.prev=1;_context.next=4;return Geolocation.getCurrentPosition();case 4:_position=_context.sent;setPosition(_position);setLoading(false);setError({showError:false});latitudefetch=_position.coords.latitude;longitudefetch=_position.coords.longitude;console.log(latitudefetch);console.log(longitudefetch);_context.next=18;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](1);setError({showError:true,message:_context.t0.message});setLoading(false);case 18:case\"end\":return _context.stop();}}},_callee,null,[[1,14]]);}));return function getLocation(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(IonLoading,{isOpen:loading,onDidDismiss:function onDidDismiss(){return setLoading(false);},message:'Getting Location...'}),/*#__PURE__*/React.createElement(IonToast,{isOpen:error.showError,onDidDismiss:function onDidDismiss(){return setError({message:\"\",showError:false});},message:error.message,duration:3000}),/*#__PURE__*/React.createElement(IonButton,{color:\"primary\",onClick:getLocation},position?\"\".concat(position.coords.latitude,\" \").concat(position.coords.longitude):\"Get Location\"));};export default GeolocationButton;","map":{"version":3,"sources":["D:/Codeworld/ionic-apps/donortab/src/components/GeolocationButton.tsx"],"names":["Geolocation","IonButton","IonLoading","IonToast","React","useState","GeolocationButton","loading","setLoading","showError","error","setError","position","setPosition","getLocation","getCurrentPosition","latitudefetch","coords","latitude","longitudefetch","longitude","console","log","message"],"mappings":"0dAAA,OAASA,WAAT,KAAyC,2BAAzC,CACA,OAASC,SAAT,CAAoBC,UAApB,CAAgCC,QAAhC,KAAgD,cAAhD,CACA,MAAOC,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAOA,GAAMC,CAAAA,iBAA2B,CAAG,QAA9BA,CAAAA,iBAA8B,EAAM,eACRD,QAAQ,CAAU,KAAV,CADA,wCAC/BE,OAD+B,eACtBC,UADsB,8BAEZH,QAAQ,CAAgB,CAAEI,SAAS,CAAE,KAAb,CAAhB,CAFI,yCAE/BC,KAF+B,eAExBC,QAFwB,8BAGNN,QAAQ,EAHF,yCAG/BO,QAH+B,eAGrBC,WAHqB,eAKtC,GAAMC,CAAAA,WAAW,0FAAG,8KAChBN,UAAU,CAAC,IAAD,CAAV,CADgB,sCAIWR,CAAAA,WAAW,CAACe,kBAAZ,EAJX,QAINH,SAJM,eAKZC,WAAW,CAACD,SAAD,CAAX,CACAJ,UAAU,CAAC,KAAD,CAAV,CACAG,QAAQ,CAAC,CAAEF,SAAS,CAAE,KAAb,CAAD,CAAR,CACMO,aARM,CAQQJ,SAAQ,CAACK,MAAT,CAAgBC,QARxB,CASNC,cATM,CASSP,SAAQ,CAACK,MAAT,CAAgBG,SATzB,CAUZC,OAAO,CAACC,GAAR,CAAYN,aAAZ,EACAK,OAAO,CAACC,GAAR,CAAYH,cAAZ,EAXY,iFAaZR,QAAQ,CAAC,CAAEF,SAAS,CAAE,IAAb,CAAmBc,OAAO,CAAE,YAAEA,OAA9B,CAAD,CAAR,CACAf,UAAU,CAAC,KAAD,CAAV,CAdY,qEAAH,kBAAXM,CAAAA,WAAW,0CAAjB,CAkBA,mBAEI,qDACI,oBAAC,UAAD,EACI,MAAM,CAAEP,OADZ,CAEI,YAAY,CAAE,8BAAMC,CAAAA,UAAU,CAAC,KAAD,CAAhB,EAFlB,CAGI,OAAO,CAAE,qBAHb,EADJ,cAMI,oBAAC,QAAD,EACI,MAAM,CAAEE,KAAK,CAACD,SADlB,CAEI,YAAY,CAAE,8BAAME,CAAAA,QAAQ,CAAC,CAAEY,OAAO,CAAE,EAAX,CAAed,SAAS,CAAE,KAA1B,CAAD,CAAd,EAFlB,CAGI,OAAO,CAAEC,KAAK,CAACa,OAHnB,CAII,QAAQ,CAAE,IAJd,EANJ,cAYI,oBAAC,SAAD,EAAW,KAAK,CAAC,SAAjB,CAA2B,OAAO,CAAET,WAApC,EAAkDF,QAAQ,WAAMA,QAAQ,CAACK,MAAT,CAAgBC,QAAtB,aAAkCN,QAAQ,CAACK,MAAT,CAAgBG,SAAlD,EAAgE,cAA1H,CAZJ,CAFJ,CAiBH,CAxCD,CA0CA,cAAed,CAAAA,iBAAf","sourcesContent":["import { Geolocation, Geoposition } from '@ionic-native/geolocation';\r\nimport { IonButton, IonLoading, IonToast } from '@ionic/react';\r\nimport React, { useState } from 'react';\r\n\r\ninterface LocationError {\r\n    showError: boolean;\r\n    message?: string;\r\n}\r\n\r\nconst GeolocationButton: React.FC = () => {\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const [error, setError] = useState<LocationError>({ showError: false });\r\n    const [position, setPosition] = useState<Geoposition>();\r\n\r\n    const getLocation = async () => {\r\n        setLoading(true);\r\n\r\n        try {\r\n            const position = await Geolocation.getCurrentPosition();\r\n            setPosition(position);\r\n            setLoading(false);\r\n            setError({ showError: false });\r\n            const latitudefetch=position.coords.latitude;\r\n            const longitudefetch=position.coords.longitude;\r\n            console.log(latitudefetch);\r\n            console.log(longitudefetch);\r\n        } catch (e) {\r\n            setError({ showError: true, message: e.message });\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        \r\n        <>\r\n            <IonLoading\r\n                isOpen={loading}\r\n                onDidDismiss={() => setLoading(false)}\r\n                message={'Getting Location...'}\r\n            />\r\n            <IonToast\r\n                isOpen={error.showError}\r\n                onDidDismiss={() => setError({ message: \"\", showError: false })}\r\n                message={error.message}\r\n                duration={3000}\r\n            />\r\n            <IonButton color=\"primary\" onClick={getLocation}>{position ? `${position.coords.latitude} ${position.coords.longitude}` : \"Get Location\"}</IonButton>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GeolocationButton;"]},"metadata":{},"sourceType":"module"}